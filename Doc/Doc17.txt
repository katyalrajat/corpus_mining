The aim of an opinion piece writer is to convince his or her readers that a particular idea or point of view is reasonable or right.  Typically, such pieces  weave facts , interpretations and reasoning into prose, wherefrom it can be hard to pick out the essential thread of argumentation.  In an earlier post I showed how an issue map can help in clarifying the central arguments in a "difficult" piece of writing by mapping out Fred Brooks' classic article No Silver Bullet.  Note that I use the word "difficult" only because the article has, at times, been misunderstood and misquoted; not because it is particularly hard to follow.  Still, Brooks' article borders on the academic; the arguments presented therein are of interest to a relatively small group of people within the software development community. Most developers and architects aren't terribly interested in the essential difficulties of the profession – they just want to get on with their jobs. In the present post, I develop an issue map of a piece that is of potentially wider interest to the IT community – Nicholas Carr's 2003 article, IT Doesn't Matter.  The main point of Carr's article is that IT is becoming a utility,  much like electricity, water or rail. As this trend towards commoditisation gains momentum, the strategic advantage offered by in-house IT will diminish, and organisations will be better served by buying IT services from "computing utility" providers than by maintaining their own IT shops.  Although Carr makes a persuasive case, he glosses over a key difference between IT and other utilities (see this post for more). Despite this, many business and IT leaders have taken his words as the way things will be. It is therefore important for all IT professionals to understand Carr's arguments. The consequences are likely to affect them some time soon, if they haven't already.  Some preliminaries before proceeding with the map. First, the complete article is available here – you may want to have a read of it before proceeding (but this isn't essential). Second, the discussion assumes a basic knowledge of  IBIS (Issue-Based Information System) –  see  this post for a quick tutorial on IBIS.  Third, the map is constructed using the open-source tool Compendium which can be downloaded here.  With the preliminaries out of the way, let's get on with issue mapping Carr's article.  So, what's the root  (i.e. central) question that Carr poses in the article?  The title of the piece is  "IT Doesn't Matter" – so one possible root question is, "Why doesn't IT matter?" But there are other candidates:  "On what basis is IT an infrastructural technology?" or  "Why is the strategic value of IT diminishing?" for example. From this it should be clear that there's a fair degree of subjectivity at every step of constructing an issue map. The visual representation that I construct here is but one interpretation of Carr's argument.  Out of the above (and many other possibles),  I choose  "Why doesn't IT matter?" as the root question. Why? Well,  in my view the whole  point of the piece  is to convince the reader that IT doesn't matter because it is an infrastructural technology and consequently has no strategic significance. This point should become clearer as our development of the issue map progresses.  The ideas that respond to this question aren't immediately obvious. This isn't unusual:  as I've mentioned elsewhere, points can only be made sequentially – one after the other – when expressed in prose.  In some cases one may have to read a piece in its entirety to figure out the elements that respond to a root (or any other) question.  In the case at hand, the response to the root question stands out clearly after a quick browse through the article. It is:  IT is an infrastructural technology.  The map with the root question and the response is shown in Figure 1.  Figure 1: Issue Map Stage 1 Figure 1: Issue Map Stage 1  Moving on, what arguments does Carr offer for (pros) and against (cons) this idea? A reading of the article reveals one con and four pros. Let's look at the cons first:  IT (which I take to mean software) is complex and malleable, unlike other infrastructural technologies. This point is mentioned, in passing, on the third page of the paper: "Although more complex and malleable than its predecessors, IT has all the hallmarks of an infrastructural technology…" The arguments supporting the idea that IT is an infrastructural technology are:  The evolution of IT closely mirrors that of other infrastructural technologies such as electricity and rail. Although this point encompasses the other points made below, I think it merits a separate mention because the analogies are quite striking. Carr makes a very persuasive, well-researched case supporting this point. IT is highly replicable. This is point needs no further elaboration, I think. IT is a transport mechanism for digital information. This is true, at least as far as network and messaging infrastructure is concerned. Cost effectiveness increases as IT services are shared. This is true too, providing it is understood that flexibility is lost when services are shared. The map, incorporating the pros and cons is shown in Figure 2.  Figure 2: Issue Map Stage 2 Figure 2: Issue Map Stage 2  Now that the arguments for and against the notion that IT is an infrastructural technology are laid out, lets look at the article again, this time with an eye out for any other issues  (questions)  raised.  The first question is an obvious one: What are the consequences of IT being an infrastructural technology?  Another point to be considered is the role of proprietary technologies, which – by definition – aren't infrastructural. The same holds true for  custom built applications. So, this begs the question, if IT is an infrastructural technology, how do proprietary and custom built applications fit in?  The map, with these questions  added in is shown in Figure 3.  Figure 3: Issue Map Stage 3 Figure 3: Issue Map Stage 3  Let's now look at the ideas that respond to these two questions.  A point that Carr makes early in the article is that the strategic value of IT is diminishing. This is essentially a consequence of the notion that IT is an infrastructural technology. This idea is supported by the following arguments:  IT is ubiquitous – it is everywhere, at least in the business world. Everyone uses it in the same way. This implies that no one gets a strategic advantage from using it. What about proprietary technologies and custom apps?.  Carr reckons these are:  Doomed to economic obsolescence. This idea is supported by the argument that these apps are too expensive and are hard to maintain. Related to the above, these will be replaced by generic apps that incorporate best practices. This trend is already evident in the increasing number of enterprise type applications that offered as services. The advantages of these are that they a) cost little b) can be offered over the web and c) spare the client all those painful maintenance headaches. The map incorporating these ideas and their supporting arguments is shown in Figure 4.  Figure 4: Issue Map Stage 4 Figure 4: Issue Map Stage 4  Finally, after painting this somewhat gloomy picture (to a corporate IT minion, such as me) Carr asks and answers the question: How should organisations deal with the changing role of IT (from strategic to operational)? His answers are:  Reduce IT spend. Buy only proven technology – follow don't lead. Focus on (operational) vulnerabilities rather than (strategic) opportunities. The map incorporating this question and the ideas that respond to it is shown in Figure 5, which is also the final map (click on the graphic to view  a full-sized image).  Figure 5: Final Issue Map Figure 5: Issue Map Stage 5  Map completed, I'm essentially done with this post. Before closing, however, I'd like to mention a couple of general points that arise from issue mapping of prose pieces.  Figure 5 is my interpretation of the article. I should emphasise that my interpretation may not coincide with what Carr intended to convey (in fact, it probably doesn't). This highlights an important, if obvious, point: what a writer intends to convey in his or her writing may not coincide with how readers interpret it. Even worse, different readers may interpret a piece differently. Writers need to write with an awareness of the potential for being misunderstood.  So, my  first point is that issue maps can help writers clarify and improve the quality of their reasoning  before they cast it in prose.  Issue maps sketch out the logical skeleton or framework of argumentative prose. As such, they  can help highlight weak points of arguments. For example, in the above article Carr glosses over the complexity and malleability of software. This is a weak point of the argument, because it is a key difference between IT and traditional infrastructural technologies. Thus my second point is that issue maps can help readers visualise weak links in arguments which might have been obscured by rhetoric and persuasive writing.  To conclude,  issue maps are valuable to writers and readers:  writers can use  issue maps to  improve the quality of their  arguments before committing them in writing, and  readers can use such maps to understand arguments that have been thus committed.